name: ${COMPOSE_PROJECT_NAME}
services:
    jenkins:
        container_name: ${COMPOSE_PROJECT_NAME}-jenkins
        restart: unless-stopped
        build:
            dockerfile: ./jenkins/Dockerfile
        env_file:
            - ./.env
        ports:
            - 8080:8080
#            - 50000:50000
        volumes:
            # Windows
            - jenkins_data:/var/jenkins_home
            # Other
            # - ./jenkins/data:/var/jenkins_home
    jenkins_agent_dotnet:
        container_name: ${COMPOSE_PROJECT_NAME}-jenkins-agent-dotnet
        restart: unless-stopped
        build:
            dockerfile: ./jenkins-agent-dotnet/Dockerfile
        entrypoint: bash /home/startup.sh
        depends_on:
            - jenkins
        environment:
            JENKINS_NODE_HELPER_ID: ${JENKINS_NODE_HELPER_ID}
            JENKINS_NODE_HELPER_PASSWORD: ${JENKINS_NODE_HELPER_PASSWORD}
            NAME: ${JENKINS_AGENT_NAME_DOTNET}
            WORKDIR: ${JENKINS_AGENT_WORKDIR_DOTNET}
            URL: "http://jenkins:8080/"
        volumes:
            # Windows
            - jenkins_agent_dotnet_data:/home/jenkins/
            # Other
            # - ./jenkins-agent-dotnet/data:/home/jenkins/
    sonarqube:
        container_name: ${COMPOSE_PROJECT_NAME}-sonarqube
        image: sonarqube:community
        restart: unless-stopped
        depends_on:
            - sonarqube_database
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://sonarqube_database:5432/sonarqube
            SONAR_JDBC_USERNAME: ${SONARQUBE_POSTGRES_USER}
            SONAR_JDBC_PASSWORD: ${SONARQUBE_POSTGRES_PASSWORD}
        ports:
            - 9000:9000
        volumes:
            - sonarqube_conf:/opt/sonarqube/conf
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
            - sonarqube_temp:/opt/sonarqube/temp
    sonarqube_database:
        container_name: ${COMPOSE_PROJECT_NAME}-sonarqube-database
        image: postgres:13
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${SONARQUBE_POSTGRES_USER}
            POSTGRES_PASSWORD: ${SONARQUBE_POSTGRES_PASSWORD}
            POSTGRES_DB: ${SONARQUBE_POSTGRES_DB}
        volumes:
            - sonarqube_database:/var/lib/postgresql
            - sonarqube_database_data:/var/lib/postgresql/data
    tunnel:
        container_name: ${COMPOSE_PROJECT_NAME}-tunnel
        image: cloudflare/cloudflared
        restart: unless-stopped
        command: tunnel run
        environment:
            TUNNEL_TOKEN:  ${CLOUDFLARE_TOKEN}

# Windows WSL has an issue sharing files between host and container, adding latency to the file system.
# Creating Volumes and mounting them to the container is a workaround.
volumes:
    jenkins_data:
    jenkins_agent_dotnet_data:
    sonarqube_conf:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_logs:
    sonarqube_temp:
    sonarqube_database:
    sonarqube_database_data:

